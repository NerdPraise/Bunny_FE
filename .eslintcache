[{"C:\\Users\\user\\Documents\\Personal Project\\React\\Bunny\\praise\\src\\index.js":"1","C:\\Users\\user\\Documents\\Personal Project\\React\\Bunny\\praise\\src\\App.js":"2","C:\\Users\\user\\Documents\\Personal Project\\React\\Bunny\\praise\\src\\components\\utils.js":"3","C:\\Users\\user\\Documents\\Personal Project\\React\\Bunny\\praise\\src\\components\\router\\protectedroute\\ProtectedRoute.js":"4","C:\\Users\\user\\Documents\\Personal Project\\React\\Bunny\\praise\\src\\components\\pages\\homepage\\HomePage.js":"5","C:\\Users\\user\\Documents\\Personal Project\\React\\Bunny\\praise\\src\\components\\pages\\login\\Login.js":"6","C:\\Users\\user\\Documents\\Personal Project\\React\\Bunny\\praise\\src\\components\\partials\\sidenav\\SideNav.js":"7","C:\\Users\\user\\Documents\\Personal Project\\React\\Bunny\\praise\\src\\components\\partials\\backdrop\\BackDrop.js":"8","C:\\Users\\user\\Documents\\Personal Project\\React\\Bunny\\praise\\src\\components\\partials\\tags\\Tags.js":"9","C:\\Users\\user\\Documents\\Personal Project\\React\\Bunny\\praise\\src\\components\\partials\\tags\\tag\\Tag.js":"10","C:\\Users\\user\\Documents\\Personal Project\\React\\Bunny\\praise\\src\\components\\hoc\\blurbs\\Blurbs.js":"11","C:\\Users\\user\\Documents\\Personal Project\\React\\Bunny\\praise\\src\\components\\pages\\homepage\\landingPage\\LandingPage.js":"12","C:\\Users\\user\\Documents\\Personal Project\\React\\Bunny\\praise\\src\\components\\pages\\homepage\\userPage\\UserPage.js":"13","C:\\Users\\user\\Documents\\Personal Project\\React\\Bunny\\praise\\src\\components\\partials\\popupmodal\\PopUpModal.js":"14","C:\\Users\\user\\Documents\\Personal Project\\React\\Bunny\\praise\\src\\components\\pages\\register\\Register.js":"15"},{"size":495,"mtime":1610778931231,"results":"16","hashOfConfig":"17"},{"size":882,"mtime":1610801083599,"results":"18","hashOfConfig":"17"},{"size":4253,"mtime":1610830385279,"results":"19","hashOfConfig":"17"},{"size":528,"mtime":1610726760905,"results":"20","hashOfConfig":"17"},{"size":1527,"mtime":1610810776573,"results":"21","hashOfConfig":"17"},{"size":4438,"mtime":1610831744226,"results":"22","hashOfConfig":"17"},{"size":3444,"mtime":1610830355441,"results":"23","hashOfConfig":"17"},{"size":296,"mtime":1610698756791,"results":"24","hashOfConfig":"17"},{"size":496,"mtime":1610789419064,"results":"25","hashOfConfig":"17"},{"size":595,"mtime":1610745803300,"results":"26","hashOfConfig":"17"},{"size":521,"mtime":1610812482175,"results":"27","hashOfConfig":"17"},{"size":3655,"mtime":1610812914442,"results":"28","hashOfConfig":"17"},{"size":5620,"mtime":1610812990432,"results":"29","hashOfConfig":"17"},{"size":2116,"mtime":1610806543636,"results":"30","hashOfConfig":"17"},{"size":4294,"mtime":1610813053315,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1ifyf9p",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},"C:\\Users\\user\\Documents\\Personal Project\\React\\Bunny\\praise\\src\\index.js",[],["67","68"],"C:\\Users\\user\\Documents\\Personal Project\\React\\Bunny\\praise\\src\\App.js",[],"C:\\Users\\user\\Documents\\Personal Project\\React\\Bunny\\praise\\src\\components\\utils.js",[],"C:\\Users\\user\\Documents\\Personal Project\\React\\Bunny\\praise\\src\\components\\router\\protectedroute\\ProtectedRoute.js",[],"C:\\Users\\user\\Documents\\Personal Project\\React\\Bunny\\praise\\src\\components\\pages\\homepage\\HomePage.js",["69"],"import React, { useState, useEffect } from \"react\";\r\nimport SideNav from \"../../partials/sidenav/SideNav\";\r\nimport BackDrop from '../../partials/backdrop/BackDrop'\r\nimport { Switch } from 'react-router-dom';\r\nimport ProtectedRoute from '../../router/protectedroute/ProtectedRoute';\r\nimport './homepage.css';\r\nimport { getUserProfile, getUserToDO } from '../../utils';\r\nimport LandingPage from './landingPage/LandingPage';\r\nimport UserPage from './userPage/UserPage';\r\n\r\n\r\nconst HomePage = (props) => {\r\n    const [show, setShow] = useState(false)\r\n\r\n    const [tags, setTags] = useState([])\r\n\r\n\r\n    const data = JSON.parse(getUserProfile())\r\n    let username = data.username\r\n    let id = data.id\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        getUserToDO(id).then(data => data.json()).then(data => {\r\n            setTags(data)\r\n        })\r\n    }, [id, setTags])\r\n\r\n    const handleNavbar = () => {\r\n        setShow(!show)\r\n    }\r\n\r\n    return (\r\n        <div className=\"bg-grey\">\r\n            <SideNav show={show} name={username} handleNavbar={handleNavbar} />\r\n            <BackDrop show={show} click={handleNavbar} />\r\n\r\n            <div className='site'>\r\n                <div className=\"container\">\r\n                    <Switch>\r\n                        <ProtectedRoute path='/user' exact component={UserPage} />\r\n                        <ProtectedRoute path='/' exact component={LandingPage} />\r\n                    </Switch>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n};\r\nexport default HomePage;","C:\\Users\\user\\Documents\\Personal Project\\React\\Bunny\\praise\\src\\components\\pages\\login\\Login.js",[],"C:\\Users\\user\\Documents\\Personal Project\\React\\Bunny\\praise\\src\\components\\partials\\sidenav\\SideNav.js",[],"C:\\Users\\user\\Documents\\Personal Project\\React\\Bunny\\praise\\src\\components\\partials\\backdrop\\BackDrop.js",[],"C:\\Users\\user\\Documents\\Personal Project\\React\\Bunny\\praise\\src\\components\\partials\\tags\\Tags.js",[],"C:\\Users\\user\\Documents\\Personal Project\\React\\Bunny\\praise\\src\\components\\partials\\tags\\tag\\Tag.js",[],"C:\\Users\\user\\Documents\\Personal Project\\React\\Bunny\\praise\\src\\components\\hoc\\blurbs\\Blurbs.js",[],"C:\\Users\\user\\Documents\\Personal Project\\React\\Bunny\\praise\\src\\components\\pages\\homepage\\landingPage\\LandingPage.js",["70","71","72","73","74","75"],"import React, { useState, useEffect } from \"react\";\r\nimport Tags from '../../../partials/tags/Tags';\r\nimport Blurbs from '../../../hoc/blurbs/Blurbs';\r\nimport { getUserProfile, createNewtask, getUserToDO } from '../../../utils';\r\nimport PopUpModal from '../../../partials/popupmodal/PopUpModal';\r\nimport { getAllUsers, deleteUser, deleteTask, updateTask, updateUser } from '../../../utils';\r\n\r\n\r\n\r\nconst LandingPage = (props) => {\r\n    const [showModal, setshowModal] = useState(false)\r\n    const [popUpdData, setPopUpdData] = useState({\r\n        heading: \"\",\r\n        fInput: \"\",\r\n        sInput: \"\"\r\n    })\r\n    const [tags, setTags] = useState([])\r\n\r\n\r\n    const data = JSON.parse(getUserProfile())\r\n    let username = data.username\r\n    let id = data.id\r\n\r\n    const handleUpdate = (id) => {\r\n\r\n    }\r\n    const handleModalShow = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n\r\n    const addTaskModalhandler = () => {\r\n        setPopUpdData({\r\n            heading: \"Add new Task\",\r\n            fInput: \"Description\",\r\n            onSumbit: addTaskhandler,\r\n            iden: id\r\n        })\r\n        setshowModal(true)\r\n    }\r\n\r\n    const addTaskhandler = async (currentUserId, form_data) => {\r\n        await createNewtask(currentUserId, form_data).then(response => {\r\n            if (response.ok) {\r\n                return response.json()\r\n            }\r\n        }).then(data => {\r\n            let newTasks = [...tags, data]\r\n            setTags(newTasks)\r\n            setshowModal(false)\r\n\r\n        })\r\n    }\r\n    const handleTaskUpdateModal = (task_id) => {\r\n        setPopUpdData({\r\n            heading: \"Update Task\",\r\n            fInput: \"Description\",\r\n            onSumbit: updateTaskAction,\r\n            iden: task_id\r\n        })\r\n        setshowModal(true)\r\n    }\r\n    const updateTaskAction = async (task_id, data) => {\r\n        await updateTask(task_id, data)\r\n        const newTags = tags.slice(); //to copy the array\r\n        for (let i of newTags) {\r\n            if (i.id == task_id) {\r\n                let newData = data.split(\"&\")\r\n                i['description'] = newData[0].split(\"=\")[1]\r\n                break;\r\n            }\r\n        }\r\n        setTags(newTags)\r\n        setshowModal(false)\r\n    }\r\n    const handleDeleteTask = async (task_id) => {\r\n        await deleteTask(task_id)\r\n        const newTags = tags.slice(); //to copy the array\r\n        for (let i of newTags) {\r\n            if (i.id == task_id) {\r\n                let index = newTags.indexOf(i)\r\n                newTags.splice(index, 1);\r\n                break;\r\n            }\r\n        }\r\n        setTags(newTags)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        getUserToDO(id).then(data => data.json()).then(data => {\r\n            setTags(data)\r\n        })\r\n    }, [id, setTags])\r\n    return (\r\n        <div className='row'>\r\n            <PopUpModal show={showModal} heading={popUpdData.heading}\r\n                hide={handleModalShow} fInput={popUpdData.fInput} sInput={popUpdData.sInput}\r\n                submitAction={popUpdData.onSumbit} iden={popUpdData.iden} />\r\n            <Blurbs title=\"DO\" icon=\"pe-7s-star\">\r\n                <Tags tags={tags} click={handleUpdate} update={handleTaskUpdateModal}\r\n                    delete={handleDeleteTask} color=\"#eb5d66\" />\r\n                <i onClick={addTaskModalhandler}> Add tasks</i>\r\n            </Blurbs>\r\n            <Blurbs title=\"Done\" icon=\"<div>jdjd</div>\">\r\n                <Tags tags={tags} click={handleUpdate} update={handleTaskUpdateModal}\r\n                    delete={handleDeleteTask} color=\" rgb(99, 214, 99)\" />\r\n            </Blurbs>\r\n        </div >\r\n    );\r\n};\r\nexport default LandingPage;","C:\\Users\\user\\Documents\\Personal Project\\React\\Bunny\\praise\\src\\components\\pages\\homepage\\userPage\\UserPage.js",["76","77","78","79"],"import React, { useState, useEffect } from \"react\";\r\nimport Tag from '../../../partials/tags/tag/Tag';\r\nimport Tags from '../../../partials/tags/Tags';\r\nimport PopUpModal from '../../../partials/popupmodal/PopUpModal';\r\nimport Blurbs from '../../../hoc/blurbs/Blurbs';\r\nimport './userpage.css';\r\nimport { getAllUsers, getUserToDO, deleteUser, deleteTask, updateTask, updateUser } from '../../../utils';\r\nimport { createNewtask } from '../../../utils';\r\n\r\n\r\nconst UserPage = (props) => {\r\n    const [users, setUsers] = useState([])\r\n    const [userTask, setUserTask] = useState([])\r\n    const [currentUserId, setCurrentUserId] = useState()\r\n    const [showModal, setshowModal] = useState(false)\r\n    const [popUpdData, setPopUpdData] = useState({\r\n        heading: \"\",\r\n        fInput: \"\",\r\n        sInput: \"\"\r\n    })\r\n    useEffect(() => {\r\n\r\n        getAllUsers().then(data => data.json()).then(data => {\r\n            setUsers(data)\r\n        })\r\n    }, [setUsers]\r\n    )\r\n\r\n    const handleModalShow = () => {\r\n        setshowModal(!showModal)\r\n    }\r\n\r\n    const handleUserTasks = async (id) => {\r\n        getUserToDO(id).then(response => response.json()).then(data => {\r\n            setUserTask(data)\r\n            setCurrentUserId(id)\r\n        })\r\n    }\r\n    const handleDeleteUser = async (user_id) => {\r\n        await deleteUser(user_id)\r\n        const new_users = users.slice(); //to copy the array\r\n        for (let i of users) {\r\n            if (i.id == user_id) {\r\n                let index = new_users.indexOf(i)\r\n                new_users.splice(index, 1);\r\n                break;\r\n            }\r\n        }\r\n        setUsers(new_users)\r\n    }\r\n\r\n    const handleDeleteTask = async (task_id) => {\r\n        await deleteTask(task_id)\r\n        const newUserTask = userTask.slice(); //to copy the array\r\n        for (let i of newUserTask) {\r\n            if (i.id == task_id) {\r\n                let index = newUserTask.indexOf(i)\r\n                newUserTask.splice(index, 1);\r\n                break;\r\n            }\r\n        }\r\n        setUserTask(newUserTask)\r\n    }\r\n    const handleUserUpdateModal = (user_id) => {\r\n        setPopUpdData({\r\n            heading: \"Update User\",\r\n            fInput: \"Username\",\r\n            sInput: \"Password (8 min.)\",\r\n            onSumbit: updateUserAction,\r\n            iden: user_id\r\n        })\r\n        setshowModal(true)\r\n    }\r\n    const handleTaskUpdateModal = (task_id) => {\r\n        setPopUpdData({\r\n            heading: \"Update Task\",\r\n            fInput: \"Description\",\r\n            onSumbit: updateTaskAction,\r\n            iden: task_id\r\n        })\r\n        setshowModal(true)\r\n    }\r\n\r\n    const updateTaskAction = async (task_id, data) => {\r\n        await updateTask(task_id, data)\r\n        const newUserTasks = userTask.slice(); //to copy the array\r\n        for (let i of newUserTasks) {\r\n            if (i.id == task_id) {\r\n                let newData = data.split(\"&\")\r\n                i['description'] = newData[0].split(\"=\")[1]\r\n                break;\r\n            }\r\n        }\r\n        setUserTask(newUserTasks)\r\n        setshowModal(false)\r\n    }\r\n    const updateUserAction = async (user_id, data) => {\r\n        await updateUser(user_id, data)\r\n        const newUsers = users.slice(); //to copy the array\r\n        for (let i of newUsers) {\r\n            if (i.id == user_id) {\r\n                let newData = data.split(\"&\")\r\n                i['username'] = newData[0].split(\"=\")[1]\r\n                break;\r\n            }\r\n        }\r\n        setUsers(newUsers)\r\n        setshowModal(false)\r\n    }\r\n    const addTaskModalhandler = () => {\r\n        setPopUpdData({\r\n            heading: \"Add new Task\",\r\n            fInput: \"Description\",\r\n            onSumbit: addTaskhandler,\r\n            iden: currentUserId\r\n        })\r\n        setshowModal(true)\r\n    }\r\n\r\n    const addTaskhandler = async (currentUserId, form_data) => {\r\n        await createNewtask(currentUserId, form_data).then(response => {\r\n            if (response.ok) {\r\n                return response.json()\r\n            }\r\n        }).then(data => {\r\n            let newTasks = [...userTask, data]\r\n            setUserTask(newTasks)\r\n            setshowModal(false)\r\n\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    let userTaskList = <Tags tags={userTask} update={handleTaskUpdateModal}\r\n        delete={handleDeleteTask} color=\"green\" />\r\n\r\n    return (\r\n        <div className='row'>\r\n            <PopUpModal show={showModal} heading={popUpdData.heading}\r\n                hide={handleModalShow} fInput={popUpdData.fInput} sInput={popUpdData.sInput}\r\n                submitAction={popUpdData.onSumbit} iden={popUpdData.iden} />\r\n            <Blurbs title=\"USERS\">\r\n                <UserTag tags={users} update={handleUserUpdateModal} click={handleUserTasks} delete={handleDeleteUser} color=\"purple\" />\r\n            </Blurbs>\r\n            <Blurbs title=\"USER TASK\">\r\n                {userTask.length ? userTaskList : <i className=\"text-secondary\">Nothing to see, click on a user with task</i>}\r\n                {userTask.length ? <i onClick={addTaskModalhandler}> Add tasks</i> : ''}\r\n            </Blurbs>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nconst UserTag = (props) => {\r\n    return (\r\n        props.tags.map((tag, index) => {\r\n            return (\r\n                <div className=\"pb-2\">\r\n                    <Tag name={tag.username} color={props.color} key={tag.id}\r\n                        click={() => props.click(tag.id)} delete={() => props.delete(tag.id)}\r\n                        update={() => props.update(tag.id)} />\r\n                </div>\r\n            )\r\n        })\r\n    )\r\n}\r\nexport default UserPage;","C:\\Users\\user\\Documents\\Personal Project\\React\\Bunny\\praise\\src\\components\\partials\\popupmodal\\PopUpModal.js",[],"C:\\Users\\user\\Documents\\Personal Project\\React\\Bunny\\praise\\src\\components\\pages\\register\\Register.js",["80"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { logInUser, registerUser, getUserProfile, setUserToken } from '../../utils'\r\n\r\n\r\nconst Register = (props) => {\r\n    const [username, setUsername] = useState()\r\n    const [password, setPassword] = useState()\r\n    const [password2, setPassword2] = useState()\r\n    const [error, setError] = useState()\r\n    // const history = useHistory();\r\n\r\n    const redirect = (path) => {\r\n        props.history.push(path);\r\n    };\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n\r\n        const form = document.getElementById(\"SignUpForm\");\r\n        form.checkValidity()\r\n        if (password != password2) {\r\n            setError(\"Password is not the same\")\r\n            return\r\n        }\r\n        let formData = {\r\n            username,\r\n            password\r\n        }\r\n        try {\r\n            let response = await registerUser(formData)\r\n            if (!response.ok) {\r\n                setError(\"Username already exists\")\r\n                return\r\n            }\r\n            const token = await logInUser({\r\n                username,\r\n                password\r\n            });\r\n            if (!token.access) {\r\n                setError(token.detail)\r\n            } else {\r\n                setUserToken(token)\r\n                await getUserProfile()\r\n                redirect('/')\r\n            }\r\n\r\n        } catch (e) {\r\n            setError('Something wrong happened')\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"col-12 col-md-6  mx-auto py-5\">\r\n                <div className=\"container\">\r\n                    <div className=\"row \">\r\n                        <div className=\"col mt-5 text-center\" >\r\n                            <div className=\"h6 text-muted pb-3 font-weight-light\"\r\n                            >\r\n                                <h2> Welcome</h2>\r\n                                <p className='text-warning'> {error}</p>\r\n                               Register an account\r\n                                </div>\r\n                            <div className=\"mx-auto text-left col-md-7\">\r\n                                <form onSubmit={handleSubmit} id=\"SignUpForm\">\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"text\"\r\n                                            className=\"form-control border-top-0 rounded-0 border-right-0 border-left-0 mb-5\"\r\n                                            name=\"username\" required onChange={e => setUsername(e.target.value)}\r\n                                            placeholder=\"Username\" />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"password\" onChange={e => setPassword(e.target.value)} required\r\n                                            className=\"form-control border-top-0 rounded-0 border-right-0 border-left-0 mb-5\"\r\n                                            placeholder=\"Password (8 min.)\" />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"password\" onChange={e => setPassword2(e.target.value)} required\r\n                                            className=\"form-control border-top-0 rounded-0 border-right-0 border-left-0 mb-5\"\r\n                                            placeholder=\"Password again\" />\r\n                                    </div>\r\n\r\n                                    <div className=\"d-flex justify-content-between pt-4\">\r\n                                        <Link to=\"/login\" className=\"btn btn-outline-secondary btn-light\">Log in</Link>\r\n                                        <button type=\"submit\" href=\"signup.html\"\r\n                                            className=\"btn btn-light btn-outline-secondary \">Sign Up</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n    );\r\n};\r\nexport default Register;",{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":15,"column":12,"nodeType":"87","messageId":"88","endLine":15,"endColumn":16},{"ruleId":"85","severity":1,"message":"89","line":6,"column":10,"nodeType":"87","messageId":"88","endLine":6,"endColumn":21},{"ruleId":"85","severity":1,"message":"90","line":6,"column":23,"nodeType":"87","messageId":"88","endLine":6,"endColumn":33},{"ruleId":"85","severity":1,"message":"91","line":6,"column":59,"nodeType":"87","messageId":"88","endLine":6,"endColumn":69},{"ruleId":"85","severity":1,"message":"92","line":21,"column":9,"nodeType":"87","messageId":"88","endLine":21,"endColumn":17},{"ruleId":"93","severity":1,"message":"94","line":66,"column":22,"nodeType":"95","messageId":"96","endLine":66,"endColumn":24},{"ruleId":"93","severity":1,"message":"94","line":79,"column":22,"nodeType":"95","messageId":"96","endLine":79,"endColumn":24},{"ruleId":"93","severity":1,"message":"94","line":43,"column":22,"nodeType":"95","messageId":"96","endLine":43,"endColumn":24},{"ruleId":"93","severity":1,"message":"94","line":56,"column":22,"nodeType":"95","messageId":"96","endLine":56,"endColumn":24},{"ruleId":"93","severity":1,"message":"94","line":88,"column":22,"nodeType":"95","messageId":"96","endLine":88,"endColumn":24},{"ruleId":"93","severity":1,"message":"94","line":101,"column":22,"nodeType":"95","messageId":"96","endLine":101,"endColumn":24},{"ruleId":"93","severity":1,"message":"97","line":22,"column":22,"nodeType":"95","messageId":"96","endLine":22,"endColumn":24},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'tags' is assigned a value but never used.","Identifier","unusedVar","'getAllUsers' is defined but never used.","'deleteUser' is defined but never used.","'updateUser' is defined but never used.","'username' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]